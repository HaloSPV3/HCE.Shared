name: dotnet-release

# TODO
# - Get AssemblyName, RuntimeIdentifier (RID) from Directory.Build.props, *.csproj
# - Allow workflows to be driven by the project(s)
# - support multiple ASSEMBLYNAME parameters for matrices

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
    - ".github/**/*.*"
    - "**/*.md"
    - "**/*.txt"

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy: # TODO: Get variables from config file(s). May require a parent workflow to allow matrix runs.
      matrix:
        RID: [ "win-x86", "win-x64" ]
        ASSEMBLYNAME: [ "SPV3.Loader", "SPV3.Installer", "HXE" ] #TODO: update
    env:
        PROJPATH: "./src/${{ matrix.ASSEMBLYNAME }}.csproj"

    steps:
    ################
    # SETUP
    ################
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required by GitVersion
        submodules: "recursive" # submodule fetch depth unknown
    - uses: actions/setup-dotnet@v3
    - name: Setup Node
      uses: actions/setup-node@v3
    - run: npm ci # Required by Semantic Release

    ################
    # BUILD
    ################
    - name: dotnet publish
      run: |
        dotnet publish ${{ matrix.PROJPATH }} -c Release --no-self-contained -p:ContinuousIntegrationBuild=true
        src/.msb.noConfig.ps1

    # required variables: TargetFramework, RuntimeIdentifier, GitVersion_FullSemVer
    # TODO: replace with ZipPublishDir (see Bintoss/GroupBox.Avalonia)
    - name: Compress Publish Artifacts
      shell: pwsh
      run: |
        $archiveName = "$env:ASSEMBLYNAME.$env:RID.$env:GitVersion_FullSemVer.zip";
        Compress-Archive -Path publish -DestinationPath $archiveName -CompressionLevel Optimal;

    ################
    # RELEASE
    ################
    # https://github.com/semantic-release/semantic-release
    - name: Semantic Release
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: publish-artifacts
        path: publish

    - name: Publish to GitHub Packages
      working-directory: publish
      run: dotnet nuget push *.nupkg -s https://nuget.pkg.github.com/HaloSPV3/index.json -k ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to nuget.org
      working-directory: publish
      run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_TOKEN }}
