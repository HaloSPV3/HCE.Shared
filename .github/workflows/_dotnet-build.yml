on:
  workflow_call:
    inputs:
      solutions_or_projects:
        type: string
      directory:
        type: string
env:
  DOTNET_ROLL_FORWARD: 'Major'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - run: corepack enable # enable corepack before setup-node
      - uses: actions/setup-node@v5
        with:
          cache: 'yarn'
          check-latest: true
          node-version-file: package.json
          node-version: lts/*
      - run: yarn

      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8'

      # should be .sln, .slnf, .slnx (slnx introduced as experimental in VS2022 17.10 Preview 3 on Preview as of 2024-04-21)
      - name: For each Solution/Project, `dotnet build` Release, Debug
        shell: pwsh
        run: |
          $nm_hceShared_dotnetBuild = 'node_modules/@halospv3/hce.shared-config/dotnet/dotnet-build.ps1';
          if (Test-Path "node_modules") {
            . "./$nm_hceShared_dotnetBuild"
          }
          # if Yarn PnP, it's complicated.
          elseif (Test-Path ".yarn/unplugged") {
            $chosenOne = '';
            # relative '.' may resolve to pwsh's *first* $PWD instead of its current $PWD.
            $searchPath = Join-Path $PWD '/.yarn/unplugged/@halospv3-hce.shared-config*'
            if ($searchPath.StartsWith('/.yarn/unplugged/@halospv3-hce.shared-config*')) {
              throw 'Gosh Yarn it! $PWD is an empty string.';
            }

            $unpluggedEntries = Resolve-Path $searchPath;
            if ($unpluggedEntries.Count -eq 0) {
              Write-Error 'Gosh Yarn it! @halospv3/hce.shared-config is not unplugged!';
            }
            elseif ($unpluggedEntries.Count -eq 1) {
              $chosenOne = $unpluggedEntries[0].Path;
            }
            elseif ($unpluggedEntries.Count -gt 1) {
              $chosenOne = $unpluggedEntries[($unpluggedEntries.Count - 1)]
            }
            else {
              $typeofUnpluggedEntries = ($unpluggedEntries)?.GetType().Name ?? 'NULL';
              throw 'Gosh Yarn it! Type of $unpluggedEntries (' + $typeofUnpluggedEntries + ') was unexpected.';
            }

            . (Join-Path $chosenOne $nm_hceShared_dotnetBuild)
          }
          elseif ($env:SLN_OR_PROJ_FILES -ne $null) {
            $env:SLN_OR_PROJ_FILE -split ';' | ForEach-Object { dotnet build  (Get-Item $_).FullName }
          }
          elseif ("${{inputs.directory}}" -ne ""){
            cd "${{inputs.directory}}"
            dotnet build
          }
          else {
            dotnet build
          }
        env:
          SLN_OR_PROJ_FILES: ${{inputs.solutions_or_projects}}
        # The following demonstrates passing solutions/projects via args
        #run: . ./node_modules/@halospv3/hce.shared-config/dotnet/dotnet-build.ps1 "A.slnf" "B.csproj"
        #run: . ./node_modules/@halospv3/hce.shared-config/dotnet/dotnet-build.ps1 ("A.csproj;B.csproj" -split ';')
